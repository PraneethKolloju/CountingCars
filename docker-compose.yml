services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 3

  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb/data

    healthcheck:
      test: [ "CMD", "mongosh", "--quiet", "127.0.0.1/test", "--eval", "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: "rabbitmq-diagnostics check_port_connectivity"
      interval: 5s
      timeout: 5s
      retries: 5

  auction-svc:
    image: praneethkolloju9/auction-svc:latest
    build:
      context: .
      dockerfile: AuctionService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT =Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auction
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 7001:80
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 5s
      timeout: 5s
      retries: 5

  search-svc:
    image: praneethkolloju9/search-svc:latest
    build:
      context: .
      dockerfile: searchservice/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT =Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 7002:80
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  identity-svc:
    image: praneethkolloju9/identity-svc:latest
    build:
      context: .
      dockerfile: IdentityService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT =Docker
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=identity
    ports:
      - 5000:80
    depends_on:
      postgres:
        condition: service_healthy

  gateway-svc:
    image: praneethkolloju9/gateway-svc:latest
    build:
      context: .
      dockerfile: GatewayService/DockerFile
    environment:
      - ASPNETCORE_ENVIRONMENT =Docker
      - ASPNETCORE_URLS=http://+:80
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 6001:80
    depends_on:
      identity-svc:
        condition: service_started

volumes:

  pgdata:
  mongodata:
